local emoteUI = {}

local round = function(num)
    return math.floor(num*10)/10;
end

function emoteUI:CreateUI()
    if game.CoreGui:FindFirstChild("EmoteUI") then
        repeat
            game.CoreGui:FindFirstChild("EmoteUI"):Destroy()
        until not game.CoreGui:FindFirstChild("EmoteUI")
    end

    task.spawn(function()
        task.wait(1)
        game.StarterGui:SetCore("SendNotification", {Title="Pro Bacon"; Text="Next update: slider(progress bar)"; Duration=5;})
    end)

    local emoteItems = {}
    local current_playing_id = "10714389988"
    local ProBaconAnimation, ProBaconDanceTrack, current_playing_looped, vertual_character, preview_on, previewanimation, previewdanceTrack, previewstepped

    local EmoteUI = Instance.new("ScreenGui")
    local ui_Base = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local UIGradient = Instance.new("UIGradient")
    local itemHolder_Frame = Instance.new("Frame")
    local UICorner_2 = Instance.new("UICorner")
    local itemHolder = Instance.new("ScrollingFrame")
    local UIListLayout = Instance.new("UIListLayout")
    local currentPlaying_Frame = Instance.new("Frame")
    local UICorner_5 = Instance.new("UICorner")
    local currentPlaying_Name = Instance.new("TextLabel")
    local emoteLength_Num = Instance.new("TextLabel")
    local emoteProgressBar_Base = Instance.new("Frame")
    local UICorner_6 = Instance.new("UICorner")
    local Frame = Instance.new("Frame")
    local UICorner_7 = Instance.new("UICorner")
    local UIGradient_2 = Instance.new("UIGradient")
    local playButton = Instance.new("Frame")
    local UICorner_8 = Instance.new("UICorner")
    local UIGradient_3 = Instance.new("UIGradient")
    local ImageButton = Instance.new("ImageButton")
    local dragToMove_Hitbox = Instance.new("TextButton")
    local dragToMove_Bar = Instance.new("Frame")
    local UICorner_9 = Instance.new("UICorner")

    EmoteUI.Name = "EmoteUI"
    EmoteUI.Parent = game.CoreGui

    ui_Base.Name = "ui_Base"
    ui_Base.Parent = EmoteUI
    ui_Base.AnchorPoint = Vector2.new(0.5, 0.5)
    ui_Base.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ui_Base.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ui_Base.BorderSizePixel = 0
    ui_Base.ClipsDescendants = true
    ui_Base.Position = UDim2.new(0.751828313, 0, 0.537454665, 0)
    ui_Base.Size = UDim2.new(0, 270, 0, 420)

    UICorner.CornerRadius = UDim.new(0, 40)
    UICorner.Parent = ui_Base

    UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 170, 255))}
    UIGradient.Parent = ui_Base
    
    itemHolder_Frame.Name = "itemHolder_Frame"
    itemHolder_Frame.Parent = ui_Base
    itemHolder_Frame.AnchorPoint = Vector2.new(0.5, 1)
    itemHolder_Frame.BackgroundColor3 = Color3.fromRGB(255, 200, 200)
    itemHolder_Frame.BackgroundTransparency = 0.750
    itemHolder_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    itemHolder_Frame.BorderSizePixel = 0
    itemHolder_Frame.Position = UDim2.new(0.5, 0, 1, -80)
    itemHolder_Frame.Size = UDim2.new(0, 249, 0, 330)

    UICorner_2.CornerRadius = UDim.new(0, 30)
    UICorner_2.Parent = itemHolder_Frame

    itemHolder.Name = "itemHolder"
    itemHolder.Parent = itemHolder_Frame
    itemHolder.Active = true
    itemHolder.AnchorPoint = Vector2.new(0, 0.5)
    itemHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    itemHolder.BackgroundTransparency = 1.000
    itemHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
    itemHolder.BorderSizePixel = 0
    itemHolder.Position = UDim2.new(0, 10, 0.5, 0)
    itemHolder.Size = UDim2.new(0, 229, 0, 310)
    itemHolder.ScrollBarThickness = 0

    UIListLayout.Parent = itemHolder
    UIListLayout.SortOrder = Enum.SortOrder.Name
    UIListLayout.Padding = UDim.new(0, 5)

    currentPlaying_Frame.Name = "currentPlaying_Frame"
    currentPlaying_Frame.Parent = ui_Base
    currentPlaying_Frame.AnchorPoint = Vector2.new(0.5, 1)
    currentPlaying_Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    currentPlaying_Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    currentPlaying_Frame.BorderSizePixel = 0
    currentPlaying_Frame.Position = UDim2.new(0.5, 0, 1, -10)
    currentPlaying_Frame.Size = UDim2.new(0, 249, 0, 60)

    UICorner_5.CornerRadius = UDim.new(0, 30)
    UICorner_5.Parent = currentPlaying_Frame

    currentPlaying_Name.Name = "currentPlaying_Name"
    currentPlaying_Name.Parent = currentPlaying_Frame
    currentPlaying_Name.AnchorPoint = Vector2.new(0, 0.5)
    currentPlaying_Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    currentPlaying_Name.BackgroundTransparency = 1.000
    currentPlaying_Name.BorderColor3 = Color3.fromRGB(0, 0, 0)
    currentPlaying_Name.BorderSizePixel = 0
    currentPlaying_Name.Position = UDim2.new(0, 20, 0.349999994, 0)
    currentPlaying_Name.Size = UDim2.new(0, 165, 0, 30)
    currentPlaying_Name.Font = Enum.Font.FredokaOne
    currentPlaying_Name.Text = "Salute"
    currentPlaying_Name.TextColor3 = Color3.fromRGB(255, 255, 255)
    currentPlaying_Name.TextScaled = true
    currentPlaying_Name.TextSize = 27.000
    currentPlaying_Name.TextWrapped = true
    currentPlaying_Name.TextXAlignment = Enum.TextXAlignment.Left

    emoteLength_Num.Name = "emoteLength_Num"
    emoteLength_Num.Parent = currentPlaying_Frame
    emoteLength_Num.AnchorPoint = Vector2.new(0, 0.5)
    emoteLength_Num.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    emoteLength_Num.BackgroundTransparency = 1.000
    emoteLength_Num.BorderColor3 = Color3.fromRGB(0, 0, 0)
    emoteLength_Num.BorderSizePixel = 0
    emoteLength_Num.Position = UDim2.new(0, 125, 0.75, 0)
    emoteLength_Num.Size = UDim2.new(0, 40, 0, 18)
    emoteLength_Num.Font = Enum.Font.SourceSansBold
    emoteLength_Num.Text = "0/3.7"
    emoteLength_Num.TextColor3 = Color3.fromRGB(255, 255, 255)
    emoteLength_Num.TextSize = 14.000
    emoteLength_Num.TextXAlignment = Enum.TextXAlignment.Left

    emoteProgressBar_Base.Name = "emoteProgressBar_Base"
    emoteProgressBar_Base.Parent = currentPlaying_Frame
    emoteProgressBar_Base.AnchorPoint = Vector2.new(0, 0.5)
    emoteProgressBar_Base.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    emoteProgressBar_Base.BorderColor3 = Color3.fromRGB(0, 0, 0)
    emoteProgressBar_Base.BorderSizePixel = 0
    emoteProgressBar_Base.Position = UDim2.new(0, 20, 0.75, 0)
    emoteProgressBar_Base.Size = UDim2.new(0, 100, 0, 9)

    UICorner_6.CornerRadius = UDim.new(1, 0)
    UICorner_6.Parent = emoteProgressBar_Base

    Frame.Parent = emoteProgressBar_Base
    Frame.AnchorPoint = Vector2.new(0, 0.5)
    Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0, 0, 0.5, 0)
    Frame.Size = UDim2.new(0.5, 0, 1, 0)

    UICorner_7.CornerRadius = UDim.new(1, 0)
    UICorner_7.Parent = Frame

    UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 0, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 170, 255))}
    UIGradient_2.Parent = Frame

    playButton.Name = "playButton"
    playButton.Parent = currentPlaying_Frame
    playButton.AnchorPoint = Vector2.new(1, 0.5)
    playButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    playButton.BackgroundTransparency = 0.650
    playButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    playButton.BorderSizePixel = 0
    playButton.Position = UDim2.new(1, -6, 0.5, 0)
    playButton.Size = UDim2.new(0, 50, 0, 50)

    UICorner_8.CornerRadius = UDim.new(1, 0)
    UICorner_8.Parent = playButton

    UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(175, 175, 175))}
    UIGradient_3.Parent = playButton

    ImageButton.Parent = playButton
    ImageButton.AnchorPoint = Vector2.new(0.5, 0.5)
    ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ImageButton.BackgroundTransparency = 1.000
    ImageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    ImageButton.BorderSizePixel = 0
    ImageButton.Position = UDim2.new(0.529999971, 0, 0.5, 0)
    ImageButton.Size = UDim2.new(0.600000024, 0, 0.75, 0)
    ImageButton.Image = "http://www.roblox.com/asset/?id=12099513379"

    dragToMove_Hitbox.Name = "dragToMove_Hitbox"
    dragToMove_Hitbox.Parent = EmoteUI
    dragToMove_Hitbox.AnchorPoint = Vector2.new(0.5, 0)
    dragToMove_Hitbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dragToMove_Hitbox.BackgroundTransparency = 1.000
    dragToMove_Hitbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
    dragToMove_Hitbox.BorderSizePixel = 0
    dragToMove_Hitbox.Position = UDim2.new(0.751999974, 0, 0.537, 210)
    dragToMove_Hitbox.Size = UDim2.new(0, 121, 0, 16)
    dragToMove_Hitbox.Text = ""
    dragToMove_Hitbox.AutoButtonColor = false

    dragToMove_Bar.Name = "dragToMove_Bar"
    dragToMove_Bar.Parent = dragToMove_Hitbox
    dragToMove_Bar.AnchorPoint = Vector2.new(0.5, 0.5)
    dragToMove_Bar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    dragToMove_Bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
    dragToMove_Bar.BorderSizePixel = 0
    dragToMove_Bar.Position = UDim2.new(0.5, 0, 0.5, 0)
    dragToMove_Bar.Size = UDim2.new(0, 100, 0, 3)

    UICorner_9.CornerRadius = UDim.new(1, 0)
    UICorner_9.Parent = dragToMove_Bar

    local dragging = false
    local dragInput, mousePos, framePos, hitboxPos
    dragToMove_Hitbox.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = ui_Base.Position
            hitboxPos = dragToMove_Hitbox.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
        input.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            ui_Base.Position  = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
            dragToMove_Hitbox.Position = UDim2.new(hitboxPos.X.Scale, hitboxPos.X.Offset + delta.X, hitboxPos.Y.Scale, hitboxPos.Y.Offset + delta.Y)
        end
    end)








    local playEmote = function()
        if game.Players.LocalPlayer.Character then
            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                if ProBaconDanceTrack then
                    ProBaconDanceTrack:Stop()
                    ProBaconDanceTrack:Destroy()
                end
                if ProBaconAnimation then
                    ProBaconAnimation:Destroy()
                    ProBaconAnimation = nil
                end
                ProBaconAnimation = Instance.new("Animation", game.Players.LocalPlayer.Character)
                ProBaconAnimation.AnimationId = current_playing_id
                ProBaconDanceTrack = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):LoadAnimation(ProBaconAnimation)
                ProBaconDanceTrack.Looped = current_playing_looped
                ProBaconDanceTrack:Play()
                return true
            end
        end
        return false
    end
    ImageButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            print('input began')
            local input_begine_time = os.clock()
            local change_state
            change_state = input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    if (os.clock() - input_begine_time) < 0.2 then
                        print('pause')
                        if ProBaconDanceTrack then
                            if ProBaconDanceTrack.Speed == 1 then
                                ProBaconDanceTrack:AdjustSpeed(0)
                            else
                                ProBaconDanceTrack:AdjustSpeed(1)
                            end
                        else
                            playEmote()
                        end
                    else
                        print('stop')
                        if ProBaconDanceTrack then
                            ProBaconDanceTrack:Stop()
                            ProBaconDanceTrack:Destroy()
                            ProBaconDanceTrack = nil
                        end
                        if ProBaconAnimation then
                            ProBaconAnimation:Destroy()
                            ProBaconAnimation = nil
                        end
                    end
                    change_state:Disconnect()
                    change_state = nil
                end
            end)
        end
    end)
    

    
    game:GetService("RunService").Stepped:Connect(function(time, deltaTime)
        UIGradient.Rotation = UIGradient.Rotation + 0.5
        UIGradient_3.Rotation = 40
        itemHolder.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y+1)
        if ProBaconDanceTrack then
            emoteLength_Num.Text = round(ProBaconDanceTrack.TimePosition).."/"..round(ProBaconDanceTrack.Length)
            Frame.Size = UDim2.new(round(ProBaconDanceTrack.TimePosition/ProBaconDanceTrack.Length), 0, 1, 0)
        else
            emoteLength_Num.Text = "--/--"
            Frame.Size = UDim2.new(0, 0, 1, 0)
        end
    end)



    
    function emoteItems:NewEmote(emoteName, emoteId, emoteLoop)
        emoteName = emoteName or "unnamed"
        emoteId = emoteId or "10714389988"
        if emoteLoop == nil then
            emoteLoop = true
        end
        local emoteOption_Button = Instance.new("TextButton")
        local UICorner_3 = Instance.new("UICorner")
        local emoteName_Label = Instance.new("TextLabel")
        local previewButton_Base = Instance.new("Frame")
        local previewButton_Button = Instance.new("ImageButton")
        local UICorner_4 = Instance.new("UICorner")

        emoteOption_Button.Name = "emoteOption_Button ("..emoteName..")"
        emoteOption_Button.Parent = itemHolder
        emoteOption_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        emoteOption_Button.BackgroundTransparency = 0.750
        emoteOption_Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
        emoteOption_Button.BorderSizePixel = 0
        emoteOption_Button.Size = UDim2.new(1, 0, 0, 50)
        emoteOption_Button.Text = ""
        emoteOption_Button.AutoButtonColor = false

        UICorner_3.CornerRadius = UDim.new(0, 20)
        UICorner_3.Parent = emoteOption_Button

        emoteName_Label.Name = "emoteName_Label"
        emoteName_Label.Parent = emoteOption_Button
        emoteName_Label.AnchorPoint = Vector2.new(0, 0.5)
        emoteName_Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        emoteName_Label.BackgroundTransparency = 1.000
        emoteName_Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
        emoteName_Label.BorderSizePixel = 0
        emoteName_Label.Position = UDim2.new(0, 20, 0.5, 0)
        emoteName_Label.Size = UDim2.new(0.649999976, 0, 1, 0)
        emoteName_Label.Font = Enum.Font.FredokaOne
        emoteName_Label.Text = emoteName
        emoteName_Label.TextColor3 = Color3.fromRGB(255, 255, 255)
        emoteName_Label.TextSize = 18.000
        emoteName_Label.TextXAlignment = Enum.TextXAlignment.Left

        previewButton_Base.Name = "previewButton_Base"
        previewButton_Base.Parent = emoteOption_Button
        previewButton_Base.AnchorPoint = Vector2.new(1, 0.5)
        previewButton_Base.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        previewButton_Base.BackgroundTransparency = 0.750
        previewButton_Base.BorderColor3 = Color3.fromRGB(0, 0, 0)
        previewButton_Base.BorderSizePixel = 0
        previewButton_Base.Position = UDim2.new(1, -8, 0.5, 0)
        previewButton_Base.Size = UDim2.new(0, 35, 0, 35)

        previewButton_Button.Name = "previewButton_Button"
        previewButton_Button.Parent = previewButton_Base
        previewButton_Button.AnchorPoint = Vector2.new(0.5, 0.5)
        previewButton_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        previewButton_Button.BackgroundTransparency = 1.000
        previewButton_Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
        previewButton_Button.BorderSizePixel = 0
        previewButton_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
        previewButton_Button.Size = UDim2.new(0.75, 0, 0.75, 0)
        previewButton_Button.Image = "http://www.roblox.com/asset/?id=7035631382"

        UICorner_4.CornerRadius = UDim.new(1, 0)
        UICorner_4.Parent = previewButton_Base

        emoteOption_Button.MouseButton1Click:Connect(function()
            currentPlaying_Name.Text = emoteName
            current_playing_id = "rbxassetid://"..emoteId
            current_playing_looped = emoteLoop
            playEmote()
        end)


        previewButton_Button.MouseButton1Click:Connect(function()
            game.StarterGui:SetCore("SendNotification", {Title="Pro Bacon"; Text="Preview WIP"; Duration=5;})
            --[[
            if preview_on then
                if vertual_character then
                    vertual_character:Destroy()
                    vertual_character = nil
                end
                preview_on = false
            else
                if vertual_character then
                    vertual_character.Image = nil
                else
                    vertual_character = Instance.new("ImageLabel")
                    vertual_character.Image = nil
                end
                preview_on = true
            end
            ]]
        end)


    end
    return emoteItems
end
return emoteUI
